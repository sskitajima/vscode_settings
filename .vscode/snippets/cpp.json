{
	// Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"include iostream": {
		"prefix" : "#include <iostream>",
		"body": [
			"#include <iostream>"
		],
		"description": "Include iostream header"
	},
	"include string": {
		"prefix": "#include <string>",
		"body" : [
			"#include <string>"
		],
		"description" : "Include string header"
	},
	"include vector": {
		"prefix": "#include <vector>",
		"body": [
			"#include <vector>"
		]
	},
	"include bits/stdc++": {
		"prefix": "#include <bits/stdc++>",
		"body": [
			"#include <bits/stdc++.h>"
		]
	},
	"std_namespace": {
		"prefix": "using std",
		"body": [
			"using namespace std;"
		],
		"description": "Declare using namesapce std;"
	},
	"int_main": {
		"prefix": "int main",
		"body": [
			"int main() {",
			"  return 0;"
			"}"
		],
		"description": "Write main function and return 0 code"
	},
	"basic for loop": {
		"prefix": "for (int i = 0;",
		"body": [
			"for (int i = 0; i < N; ++i) {",
			"  ",
			"}",
		],
		"description" : "Fundamental for loop"
	},
	"start timer": {
		"prefix": "measure time in ms",
		"body": [
			"const auto start = std::chrono::steady_clock::now();",
			"const auto end = std::chrono::steady_clock::now();",
			"const double ms = std::chrono::duration_cast<std::chrono::milliseconds>(end - start).count();",
		],
		"description": "Print the code to measure the duration time in milliseconds"
	}
}
